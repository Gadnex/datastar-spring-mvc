networks:
  default:
    name: backend

services:
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    command:
      #- --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entryPoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      #- --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.myresolver.acme.email=gadnex@gmail.com"
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --metrics.prometheus=true
      - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --entryPoints.metrics.address=:8899
      - --metrics.prometheus.entryPoint=metrics
    ports:
      - 443:443
      - 8080:8080
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  datastar-spring-mvc:
    image: gadnex/datastar-spring-mvc:0.1.0-SNAPSHOT
    container_name: datastar-spring-mvc
    depends_on:
      - traefik
      - prometheus
      - loki
    restart: unless-stopped
    expose:
      - 8080
      - 9080
    labels:
      - traefik.enable=true
      - traefik.http.routers.datastar.rule=Host(`gadnex.duckdns.org`)
      - traefik.http.routers.datastar.entrypoints=websecure
      - traefik.http.routers.datastar.tls.certresolver=myresolver

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on:
      - traefik
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/etc/prometheus/data
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/etc/prometheus/data
      - --storage.tsdb.retention.time=240h

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./grafana/custom.ini:/etc/grafana/grafana.ini
      - ./grafana/data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false

  loki:
    image: grafana/loki
    container_name: loki
    restart: unless-stopped
    expose:
      - 3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/local-config.yaml/:/etc/loki/local-config.yaml
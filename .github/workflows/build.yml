name: Build native image

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_native_images:
    name: 'Build native image ${{ matrix.platform }}'
    strategy:
      matrix:
        os: [ ubuntu-24.04, ubuntu-24.04-arm ]
        include:
          - os: 'ubuntu-24.04'
            platform: 'linux/amd64'
            postfix: "amd64"
          - os: 'ubuntu-24.04-arm'
            platform: 'linux/arm64'
            postfix: "arm64"
    runs-on: ${{matrix.os}}
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          fetch-tags: 'true'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Test
        shell: bash
        run: |
          ./gradlew test

      - name: Build native image
        shell: bash
        run: |
          ./gradlew bootBuildImage
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push native image
        shell: bash
        run: |
          VERSION="$(docker images --format "{{.Tag}}" ${{ vars.DOCKERHUB_REPOSITORY }})"
          docker image tag ${{ vars.DOCKERHUB_REPOSITORY }}:$VERSION ${{ vars.DOCKERHUB_REPOSITORY }}:$VERSION-${{ matrix.postfix }}
          docker push ${{ vars.DOCKERHUB_REPOSITORY }}:$VERSION-${{ matrix.postfix }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build_native_images.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build_native_images
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ vars.DOCKERHUB_REPOSITORY }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}